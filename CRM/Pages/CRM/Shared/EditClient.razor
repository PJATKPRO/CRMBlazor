@inject IDbContextFactory<CRMBlazorDbContext> _context
@using CRMBlazor.Data.CRMBlazorDb;
@using Microsoft.EntityFrameworkCore;





<EditForm EditContext="editContext" OnValidSubmit="OnSubmit">
    @*EditForm to komponent formularza wymaga parametru EditContext który jest jako prywatna i zainicializowana w OnParametersSet albo OnParametersSetAsync*@
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h1>Edytuj @model.Name @model.Surname </h1>
    <ul style="list-style: none;">
        <li>
            <h3>Imię</h3>
            <RadzenTextBox @bind-Value="model.Name"></RadzenTextBox>
        </li>
        <li>
            <h3>Nazwisko</h3>
            <RadzenTextBox @bind-Value="model.Surname"></RadzenTextBox>
        </li>
        <li>
            <h3>Adres E-mail</h3>
            <RadzenTextBox @bind-Value="model.Email"></RadzenTextBox>
        </li>
        <li>
            <h3>Pesel lub NIP</h3>
            <RadzenTextBox @bind-Value="model.PeselOrNip"></RadzenTextBox>
        </li>
    </ul>

    @if (model.Address is not null)
    {
        <h2>Adres Zamieszkania</h2>
        <ul>
            <h3>Nazwa miejscowości</h3>
            <RadzenTextBox @bind-Value="model.Address.City"></RadzenTextBox>
        </ul>
        <ul>
            <h3>Ulica</h3>
            <RadzenTextBox @bind-Value="model.Address.Street"></RadzenTextBox>
        </ul>
        <ul>
            <h3>Kod pocztowy</h3>
            <RadzenTextBox @bind-Value="model.Address.PostCode"></RadzenTextBox>
        </ul>

        <RadzenButton Text="usuń adres zamieszkania" Click="() => model.Address = null" />
    }
    else
    {
        <RadzenButton Text="dodaj adres zamieszkania" Click="() => model.Address = new()" />
    }

    @if (model.InvestitionAddress is not null)
    {
        <h2>Adres Inwestycji</h2>
        <ul>
            <h3>Nazwa miejscowości</h3>
            <RadzenTextBox @bind-Value="model.InvestitionAddress.City"></RadzenTextBox>
        </ul>
        <ul>
            <h3>Ulica</h3>
            <RadzenTextBox @bind-Value="model.InvestitionAddress.Street"></RadzenTextBox>
        </ul>
        <ul>
            <h3>Kod pocztowy</h3>
            <RadzenTextBox @bind-Value="model.InvestitionAddress.PostCode"></RadzenTextBox>
        </ul>

        <RadzenButton Text="usuń adres inwestycji" Click="() => model.InvestitionAddress = null" />
    }
    else
    {
        <RadzenButton Text="dodaj adres inwestycji" Click="() => model.Address = new()" />
    }


    <RadzenButton ButtonType="ButtonType.Submit">Zapisz</RadzenButton>
</EditForm>


@code {

    private EditContext? editContext;
    private Client model;

    protected override void OnParametersSet()
    {

        using (var db = _context.CreateDbContext())
        {
            model = db.Clients.OrderBy(x => x.Id).Last();
        }

        editContext = new (model);
        base.OnParametersSet();
    }

    async Task OnSubmit()
    {
        using (var db = await _context.CreateDbContextAsync())
        {
            db.Clients.Update(model);
            await db.SaveChangesAsync();
        }
    }
}